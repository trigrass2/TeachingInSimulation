<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cas.sim.tis.mapper.BrokenPublishMapper">
	<resultMap id="BaseResultMap" type="com.cas.sim.tis.entity.BrokenPublish">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="BID" jdbcType="VARCHAR" property="brokenId" />
		<result column="CID" jdbcType="VARCHAR" property="classId" />
		<result column="PUBLISHER" jdbcType="INTEGER" property="publisher" />
		<result column="PUBLISH_DATE" jdbcType="TIMESTAMP" property="publishDate" />
		<result column="STATE" jdbcType="INTEGER" property="state" />
	</resultMap>
	<resultMap id="BaseResultExtMap" type="com.cas.sim.tis.entity.BrokenPublish" extends="BaseResultMap">
		<association property="brokenCase" javaType="com.cas.sim.tis.entity.BrokenCase">
			<id column="BID" jdbcType="INTEGER" property="id" />
			<result column="TCNAME" jdbcType="VARCHAR" property="name" />
		</association>
		<association property="clazz" javaType="com.cas.sim.tis.entity.Class">
			<id column="CID" jdbcType="INTEGER" property="id" />
			<result column="CNAME" jdbcType="VARCHAR" property="name" />
		</association>
	</resultMap>
	<resultMap id="SubmitStateMap" type="com.cas.sim.tis.vo.SubmitInfo">
		<result column="CODE" jdbcType="VARCHAR" property="code" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="SUBMITED" jdbcType="INTEGER" property="submited" />
	</resultMap>
	<select id="findPublishById" resultMap="BaseResultExtMap">
		SELECT
		a.*, c.id AS cid, c.name AS cname
		FROM
		(SELECT
		p.id,
		p.bid,
		p.cid,
		bc.name AS tcname
		FROM
		broken_publish p, broken_case bc
		WHERE
		p.bid = bc.id
		AND p.id = #{id}) a
		LEFT JOIN
		class c ON a.cid = c.id
	</select>
	<select id="findSubmitStateById" resultMap="SubmitStateMap">
		SELECT
		a.code, a.name, (r.archive_path is not null) as submited
		FROM
		(SELECT
		p.id AS pid, u.id AS uid, u.code, u.name
		FROM
		broken_publish p, user u
		WHERE
		p.cid = u.cid AND p.id = #{id}) a
		LEFT JOIN
		broken_record r ON a.pid = r.pid and r.creator=a.uid
		GROUP BY a.code , a.name;
	</select>
</mapper>